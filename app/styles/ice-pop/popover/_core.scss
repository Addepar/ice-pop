/*
Ice Popover

A popover that is triggered upon clicking a target element.

You can implement a popover type class and custom placement with the Ember addon like this:
```
{{#ice-popover class="type" placement="top"}}
  <div class="ice-popover-body">
    I'm Mr. Meseeks look at me!
  </div>
{{/ice-popover}}
```

#### Important
Note that popovers are an offical Ember addon in ice-pop,
so please do not use the below example HTML directly.
Please use the Ember component instead.
[See Ice Popover Docs >>](/docs/ice-pop/class/addon/components/ice-popover.js~IcePopover.html)

Markup:
<div class="ice-popover is-visible" x-placement="top">
  <div class="ice-popover-content">
    <div class="ice-popover-body">
      I'm Mr. Meseeks look at me!
    </div>
  </div>
  <div class="popper-arrow" x-arrow></div>
</div>

Styleguide Ice Pop - Ice Popover
*/

$popover-placements: ('left': 'horizontal', 'right': 'horizontal', 'top': 'vertical', 'bottom': 'vertical');

@include arrow-box(
  'ice-popover',
  $popover-placements,
  $ice-popover-z-index,
  $ice-popover-background-color,
  $ice-popover-width,
  $ice-popover-min-width,
  $ice-popover-max-width,
  $ice-popover-height,
  $ice-popover-min-height,
  $ice-popover-max-height-vh,
  $ice-popover-box-padding,
  $ice-popover-border-width,
  $ice-popover-border-style,
  $ice-popover-border-color,
  $ice-popover-border-radius,
  $ice-popover-box-shadow,
  $ice-popover-text-color,
  $ice-popover-text-align,
  $ice-popover-font-weight,
  $ice-popover-font-size,
  $ice-popover-line-height,
  $ice-popover-font-family,
  $ice-popover-fade-transition,
  $ice-popover-arrow-size
  );

// Popovers can have an optional header determined by whether a title is passed in.
// This means tricky consequences for the arrow color, which needs to match if
// it is visually touching the title header.
// ----------------------------------------
// Currently the below method is to guess what the arrow color should be based
// on its predicted placement in relation to the header, but this can be incorrect
// if the popover needs to adjust the arrow placement due to limited room on the screen.
// A better solution would be to change the color with JS depending on the
// y-placement of the arrow and whether it is in range of the header.

.ice-popover.has-title {
  // When the arrow position is at the top (tooltip placement being bottom),
  // its always touching the title header
  &[x-placement^="bottom"] {
    @include update-arrow-color('bottom', $ice-popover-title-background-color, $ice-popover-border-color);
  }

  // When the arrow placement is at the top right
  &[x-placement="left-start"] {
    @include update-arrow-color('left', $ice-popover-title-background-color, $ice-popover-border-color);
  }

  // When the arrow placement is at top left
  &[x-placement="right-start"] {
    @include update-arrow-color('right', $ice-popover-title-background-color, $ice-popover-border-color);
  }
}

// Content level elements

.ice-popover-content {
  // Setting up flex to control the height of the body so it can scroll
  display: flex;
  flex-direction: column;

  // We need to check whether a vh height was set (which is by default,
  // but the user may overwrite to '0' or 'none').
  // If set, we need to add the optional max pixel height css media query (explained below).
  @if non-zero-value($ice-popover-max-height-vh) {
    // If the popover has been given a vh max height AND a px max height, we want to
    // cap the max-height out once the rendered vh height gets longer than the px amount given.
    // Until there is a better way to cap percentage/viewport based values like this, we are using a media query.
    //
    // Checking if px value was given, otherwise we don't need to do anything
    @if non-zero-value($ice-popover-max-height-px) {
      // Figure out the ratio of the given vh height to the current screen height
      $viewport-ratio: $ice-popover-max-height-vh / 100vh;
      $viewport-adjusted-height: $ice-popover-max-height-px / $viewport-ratio;
      @media screen and (min-height: $viewport-adjusted-height) {
        max-height: $ice-popover-max-height-px;
      }
    }
  } @else {
    // If vh var was not set, we need to set the given pixel height onto the content div, since it
    // will not have been set in the mixin (we give the mixin the vh var by default)
    max-height: $ice-popover-max-height-px;
  }
}

/*
Ice Popover with title

You can add a popover title with the Ember addon like this:
```
{{#ice-popover popoverTitle="Popover Title"}}
  <div class="ice-popover-body">
    I'm Mr. Meseeks look at me!
  </div>
{{/ice-popover}}
```

Markup:
<div class="ice-popover is-visible has-title" x-placement="top-right">
  <div class="ice-popover-content">
    <header class="ice-popover-title">Popover Title</header>
    <div class="ice-popover-body">
      I'm Mr. Meseeks look at me!
    </div>
  </div>
  <div class="popper-arrow" x-arrow></div>
</div>

Styleguide Ice Pop - Ice Popover - Popover with title
*/
.ice-popover-title {
  background-color: $ice-popover-title-background-color;
  padding: $ice-popover-header-padding;
  font-size: $ice-popover-title-font-size;
  font-weight: $ice-popover-title-font-weight;
  line-height: $ice-popover-title-line-height;
  flex: none;
}

// Body should generally always be used and is demonstrated in the base component,
// so not adding css doc entry for now
.ice-popover-body {
  padding: $ice-popover-content-padding;
  flex: 1;
  overflow: auto;
  max-width: 100%;
}

/*
Ice Popover with footer

To add a popover footer with the Ember addon, you just manually put it in the HTML like this:
```
{{#ice-popover}}
  <div class="ice-popover-body">
    I'm Mr. Meseeks look at me!
  </div>
  <div class="ice-popover-footer">
    <button>Click me</button>
  </div>
{{/ice-popover}}
```

Markup:
<div class="ice-popover is-visible" x-placement="top-right">
  <div class="ice-popover-content">
    <div class="ice-popover-body">
      I'm Mr. Meseeks look at me!
    </div>
    <div class="ice-popover-footer">
      <button>Click me</button>
    </div>
  </div>
  <div class="popper-arrow" x-arrow></div>
</div>

Styleguide Ice Pop - Ice Popover - Popover with footer
*/
.ice-popover-footer {
  padding: $ice-popover-footer-padding;
  border-top: $ice-popover-footer-border;
  flex: none;
}
